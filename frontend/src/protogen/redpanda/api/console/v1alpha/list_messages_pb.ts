// @generated by protoc-gen-es v1.5.1 with parameter "target=ts,import_extension="
// @generated from file redpanda/api/console/v1alpha/list_messages.proto (package redpanda.api.console.v1alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * ListMessagesRequest is the request for ListMessages call.
 *
 * @generated from message redpanda.api.console.v1alpha.ListMessagesRequest
 */
export class ListMessagesRequest extends Message<ListMessagesRequest> {
  /**
   * Topic name.
   *
   * @generated from field: string topic = 1;
   */
  topic = "";

  constructor(data?: PartialMessage<ListMessagesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.console.v1alpha.ListMessagesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "topic", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMessagesRequest {
    return new ListMessagesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMessagesRequest {
    return new ListMessagesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMessagesRequest {
    return new ListMessagesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListMessagesRequest | PlainMessage<ListMessagesRequest> | undefined, b: ListMessagesRequest | PlainMessage<ListMessagesRequest> | undefined): boolean {
    return proto3.util.equals(ListMessagesRequest, a, b);
  }
}

/**
 * ListMessagesResponse is the response for ListMessages call.
 *
 * @generated from message redpanda.api.console.v1alpha.ListMessagesResponse
 */
export class ListMessagesResponse extends Message<ListMessagesResponse> {
  constructor(data?: PartialMessage<ListMessagesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.console.v1alpha.ListMessagesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMessagesResponse {
    return new ListMessagesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMessagesResponse {
    return new ListMessagesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMessagesResponse {
    return new ListMessagesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListMessagesResponse | PlainMessage<ListMessagesResponse> | undefined, b: ListMessagesResponse | PlainMessage<ListMessagesResponse> | undefined): boolean {
    return proto3.util.equals(ListMessagesResponse, a, b);
  }
}

