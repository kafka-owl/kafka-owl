apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "console.fullname" . }}
  labels:
    {{- include "console.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "console.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "console.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "console.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: configs
          configMap:
            name: {{ include "console.fullname" . }}
        {{- if .Values.secret.create }}
        - name: secrets
          secret:
            secretName: {{ include "console.fullname" . }}
        {{- end }}
        {{- if .Values.secret.kafka.tlsCa_ref }}
        - name: kafka_tls_ca
          secret:
            secretName: {{ .Values.secret.kafka.tlsCa_ref.secret_name }}
          value: "/etc/console/secrets/kafka-tls-ca"
        {{- end }}
        {{- if .Values.secret.kafka.tlsCert_ref }}
        - name: kafka_tls_cert
          secret:
            secretName: {{ .Values.secret.kafka.tlsCert_ref.secret_name }}
          value: "/etc/console/secrets/kafka-tls-cert"
        {{- end }}
        {{- if .Values.secret.kafka.tlsKey_ref }}
        - name: kafka_tls_key
          secret:
            secretName: {{ .Values.secret.kafka.tlsKey_ref.secret_name }}
          value: "/etc/console/secrets/kafka-tls-key"
        {{- end }}
        {{- if .Values.secret.kafka.schemaRegistryTlsCa_ref }}
        - name: kafka_schemaregistry_tls_ca
          secret:
            secretName: {{ .Values.secret.kafka.schemaRegistryTlsCa_ref.secret_name }}
          value: "/etc/console/secrets/kafka-schemaregistry-tls-ca"
        {{- end }}
        {{- if .Values.secret.kafka.schemaRegistryTlsCert_ref }}
        - name: kafka_schemaregistry_tls_cert
          secret:
            secretName: {{ .Values.secret.kafka.schemaRegistryTlsCert_ref.secret_name }}
          value: "/etc/console/secrets/kafka-schemaregistry-tls-cert"
        {{- end }}
        {{- if .Values.secret.kafka.schemaRegistryTlsKey_ref }}
        - name: kafka_schemaregistry_tls_key
          secret:
            secretName: {{ .Values.secret.kafka.schemaRegistryTlsKey_ref.secret_name }}
          value: "/etc/console/secrets/kafka-schemaregistry-tls-key"
        {{- end }}
        {{- if .Values.secret.login.google.groupsServiceAccount_ref }}
        - name: google_serviceaccount
          secret:
            secretName: {{ .Values.secret.login.google.groupsServiceAccount_ref.secret_name }}
        {{- end }}
        {{- if .Values.secret.redpanda.adminApi.tlsCa_ref }}
        - name: redpanda_adminapi_tls_ca
          secret:
            secretName: {{ .Values.secret.redpanda.adminApi.tlsCa_ref.secret_name }}
        {{- end }}
        {{- if .Values.secret.redpanda.adminApi.tlsKey_ref }}
        - name: redpanda_adminapi_tls_key
          secret:
            secretName: {{ .Values.secret.redpanda.adminApi.tlsKey_ref.secret_name }}
        {{- end }}
        {{- if .Values.secret.redpanda.adminApi.tlsCert_ref }}
        - name: redpanda_adminapi_tls_cert
          secret:
            secretName: {{ .Values.secret.redpanda.adminApi.tlsCert_ref.secret_name }}
        {{- end }}
        {{- range .Values.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
            {{- if .defaultMode }}
            defaultMode: {{ .defaultMode }}
            {{- end }}
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{- tpl . $ | nindent 8 }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          args:
            - "--config.filepath=/etc/console/configs/config.yaml"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ include "console.imageRegistry" . }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ include "console.server.listenPort" . }}
              protocol: TCP
          volumeMounts:
            - name: configs
              mountPath: /etc/console/configs
              readOnly: true
            {{- if .Values.secret.create }}
            - name: secrets
              mountPath: /etc/console/secrets
              readOnly: true
            {{- end }}
            {{- if .Values.secret.kafka.tlsCa_ref }}
            - name: kafka_tls_ca
              mountPath: "/etc/console/secrets/kafka-tls-ca"
              subPath: {{ .Values.secret.kafka.tlsCa_ref.secret_key }}
              readOnly: true
            {{- end }}
            {{- if .Values.secret.kafka.tlsCert_ref }}
            - name: kafka_tls_cert
              mountPath: "/etc/console/secrets/kafka-tls-cert"
              subPath: {{ .Values.secret.kafka.tlsCert_ref.secret_key }}
              readOnly: true
            {{- end }}
            {{- if .Values.secret.kafka.tlsKey_ref }}
            - name: kafka_tls_key
              mountPath: "/etc/console/secrets/kafka-tls-key"
              subPath: {{ .Values.secret.kafka.tlsKey_ref.secret_key }}
              readOnly: true
            {{- end }}
            {{- if .Values.secret.kafka.schemaRegistryTlsCa_ref }}
            - name: kafka_schemaregistry_tls_ca
              mountPath: "/etc/console/secrets/kafka-schemaregistry-tls-ca"
              subPath: {{ .Values.secret.kafka.schemaRegistryTlsCa_ref.secret_key }}
              readOnly: true
            {{- end }}
            {{- if .Values.secret.kafka.schemaRegistryTlsCert_ref }}
            - name: kafka_schemaregistry_tls_cert
              mountPath: "/etc/console/secrets/kafka-schemaregistry-tls-cert"
              subPath: {{ .Values.secret.kafka.schemaRegistryTlsCert_ref.secret_key }}
              readOnly: true
            {{- end }}
            {{- if .Values.secret.kafka.schemaRegistryTlsKey_ref }}
            - name: kafka_schemaregistry_tls_key
              mountPath: "/etc/console/secrets/kafka-schemaregistry-tls-key"
              subPath: {{ .Values.secret.kafka.schemaRegistryTlsKey_ref.secret_key }}
              readOnly: true
            {{- end }}
            {{- if .Values.secret.login.google.groupsServiceAccount_ref }}
            - name: google_serviceaccount
              mountPath: /etc/console/secrets/login-google-groups-service-account.json
              subPath: {{ .Values.secret.login.google.groupsServiceAccount_ref.secret_key }}
              readOnly: true
            {{- end }}
            {{- if .Values.secret.redpanda.adminApi.tlsCa_ref }}
            - name: redpanda_adminapi_tls_ca
              mountPath: "/etc/console/secrets/redpanda-admin-api-tls-ca"
              subPath: {{ .Values.secret.redpanda.adminApi.tlsCa_ref.secret_key }}
              readOnly: true
            {{- end }}
            {{- if .Values.secret.redpanda.adminApi.tlsKey_ref }}
            - name: redpanda_adminapi_tls_key
              mountPath: "/etc/console/secrets/redpanda-admin-api-tls-key"
              subPath: {{ .Values.secret.redpanda.adminApi.tlsKey_ref.secret_key }}
              readOnly: true
            {{- end }}
            {{- if .Values.secret.redpanda.adminApi.tlsCert_ref }}
            - name: redpanda_adminapi_tls_cert
              mountPath: "/etc/console/secrets/redpanda-admin-api-tls-cert"
              subPath: {{ .Values.secret.redpanda.adminApi.tlsCert_ref.secret_key }}
              readOnly: true
            {{- end }}
            {{- range .Values.secretMounts }}
            - name: {{ .name }}
              mountPath: {{ .path }}
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
            {{- end }}
            {{- with .Values.extraVolumeMounts }}
            {{- tpl . $ | nindent 12 }}
            {{- end }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            httpGet:
              path: /admin/health
              port: http
          readinessProbe:
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            httpGet:
              path: /admin/health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- with .Values.extraEnv }}
            {{- tpl . $ | nindent 12 }}
            {{- end }}
          {{- if .Values.secret.create }}
            {{- if .Values.secret.kafka.saslPassword }}
            - name: KAFKA_SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "console.fullname" . }}
                  key: kafka-sasl-password
            {{- end }}
            {{- if .Values.secret.kafka.protobufGitBasicAuthPassword }}
            - name: KAFKA_PROTOBUF_GIT_BASICAUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "console.fullname" . }}
                  key: kafka-protobuf-git-basicauth-password
            {{- end }}
            {{- if .Values.secret.kafka.awsMskIamSecretKey }}
            - name: KAFKA_SASL_AWSMSKIAM_SECRETKEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "console.fullname" . }}
                  key: kafka-sasl-aws-msk-iam-secret-key
            {{- end }}
            {{- if .Values.secret.kafka.tlsCa }}
            - name: KAFKA_TLS_CAFILEPATH
              value: "/etc/console/secrets/kafka-tls-ca"
            {{- end }}
            {{- if .Values.secret.kafka.tlsCert }}
            - name: KAFKA_TLS_CERTFILEPATH
              value: "/etc/console/secrets/kafka-tls-cert"
            {{- end }}
            {{- if .Values.secret.kafka.tlsKey }}
            - name: KAFKA_TLS_KEYFILEPATH
              value: "/etc/console/secrets/kafka-tls-key"
            {{- end }}
            {{- if .Values.secret.kafka.schemaRegistryTlsCa }}
            - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
              value: "/etc/console/secrets/kafka-schemaregistry-tls-ca"
            {{- end }}
            {{- if .Values.secret.kafka.schemaRegistryTlsCert }}
            - name: KAFKA_SCHEMAREGISTRY_TLS_CERTFILEPATH
              value: "/etc/console/secrets/kafka-schemaregistry-tls-cert"
            {{- end }}
            {{- if .Values.secret.kafka.schemaRegistryTlsKey }}
            - name: KAFKA_SCHEMAREGISTRY_TLS_KEYFILEPATH
              value: "/etc/console/secrets/kafka-schemaregistry-tls-key"
            {{- end }}
            {{- if .Values.secret.kafka.schemaRegistryPassword }}
            - name: KAFKA_SCHEMAREGISTRY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "console.fullname" . }}
                  key: kafka-schema-registry-password
            {{- end }}
            - name: LOGIN_JWTSECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "console.fullname" . }}
                  key: login-jwt-secret
            {{- if .Values.secret.login.google.clientSecret }}
            - name: LOGIN_GOOGLE_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "console.fullname" . }}
                  key: login-google-oauth-client-secret
            {{- end }}
            {{- if .Values.secret.login.google.groupsServiceAccount }}
            - name: LOGIN_GOOGLE_DIRECTORY_SERVICEACCOUNTFILEPATH
              value: /etc/console/secrets/login-google-groups-service-account.json
            {{- end }}
            {{- if .Values.secret.login.github.clientSecret }}
            - name: LOGIN_GITHUB_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "console.fullname" . }}
                  key: login-github-oauth-client-secret
            {{- end }}
            {{- if .Values.secret.login.github.personalAccessToken }}
            - name: LOGIN_GITHUB_DIRECTORY_PERSONALACCESSTOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "console.fullname" . }}
                  key: login-github-personal-access-token
            {{- end }}
            {{- if .Values.secret.login.okta.clientSecret }}
            - name: LOGIN_OKTA_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "console.fullname" . }}
                  key: login-okta-client-secret
            {{- end }}
            {{- if .Values.secret.login.okta.directoryApiToken }}
            - name: LOGIN_OKTA_DIRECTORY_APITOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "console.fullname" . }}
                  key: login-okta-directory-api-token
            {{- end }}
            {{- if .Values.secret.login.oidc.clientSecret }}
            - name: LOGIN_OIDC_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "console.fullname" . }}
                  key: login-oidc-client-secret
            {{- end }}
            {{- if .Values.secret.enterprise.license }}
            - name: LICENSE
              valueFrom:
                secretKeyRef:
                  name: {{ include "console.fullname" . }}
                  key: enterprise-license
            {{- end }}
            {{- if .Values.secret.redpanda.adminApi.password }}
            - name: REDPANDA_ADMINAPI_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "console.fullname" . }}
                  key: redpanda-admin-api-password
            {{- end }}
            {{- if .Values.secret.redpanda.adminApi.tlsCa }}
            - name: REDPANDA_ADMINAPI_TLS_CAFILEPATH
              value: "/etc/console/secrets/redpanda-admin-api-tls-ca"
            {{- end }}
            {{- if .Values.secret.redpanda.adminApi.tlsKey }}
            - name: REDPANDA_ADMINAPI_TLS_KEYFILEPATH
              value: "/etc/console/secrets/redpanda-admin-api-tls-key"
            {{- end }}
            {{- if .Values.secret.redpanda.adminApi.tlsCert }}
            - name: REDPANDA_ADMINAPI_TLS_CERTFILEPATH
              value: "/etc/console/secrets/redpanda-admin-api-tls-cert"
            {{- end }}
            {{- if .Values.secret.kafka.saslPassword_ref }}
            - name: KAFKA_SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.kafka.saslPassword_ref.secret_name }}
                  key: {{ .Values.secret.kafka.saslPassword_ref.secret_key }}
            {{- end }}
            {{- if .Values.secret.kafka.protobufGitBasicAuthPassword_ref }}
            - name: KAFKA_PROTOBUF_GIT_BASICAUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.kafka.protobufGitBasicAuthPassword_ref.secret_name }}
                  key: {{ .Values.secret.kafka.protobufGitBasicAuthPassword_ref.secret_key }}
            {{- end }}
            {{- if .Values.secret.kafka.awsMskIamSecretKey_ref }}
            - name: KAFKA_SASL_AWSMSKIAM_SECRETKEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.kafka.awsMskIamSecretKey_ref.secret_name }}
                  key: {{ .Values.secret.kafka.awsMskIamSecretKey_ref.secret_key }}
            {{- end }}
            {{- if .Values.secret.kafka.tlsCa_ref }}
            - name: KAFKA_TLS_CAFILEPATH
              value: "/etc/console/secrets/kafka-tls-ca"
            {{- end }}
            {{- if .Values.secret.kafka.tlsCert_ref }}
            - name: KAFKA_TLS_CERTFILEPATH
              value: "/etc/console/secrets/kafka-tls-cert"
            {{- end }}
            {{- if .Values.secret.kafka.tlsKey_ref }}
            - name: KAFKA_TLS_KEYFILEPATH
              value: "/etc/console/secrets/kafka-tls-key"
            {{- end }}
            {{- if .Values.secret.kafka.schemaRegistryTlsCa_ref }}
            - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
              value: "/etc/console/secrets/kafka-schemaregistry-tls-ca"
            {{- end }}
            {{- if .Values.secret.kafka.schemaRegistryTlsCert_ref }}
            - name: KAFKA_SCHEMAREGISTRY_TLS_CERTFILEPATH
              value: "/etc/console/secrets/kafka-schemaregistry-tls-cert"
            {{- end }}
            {{- if .Values.secret.kafka.schemaRegistryTlsKey_ref }}
            - name: KAFKA_SCHEMAREGISTRY_TLS_KEYFILEPATH
              value: "/etc/console/secrets/kafka-schemaregistry-tls-key"
            {{- end }}
            {{- if .Values.secret.kafka.schemaRegistryPassword_ref }}
            - name: KAFKA_SCHEMAREGISTRY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.kafka.schemaRegistryPassword_ref.secret_name }}
                  key: {{ .Values.secret.kafka.schemaRegistryPassword_ref.secret_key }}
            {{- end }}
            {{- if .Values.secret.login.google.clientSecret_ref }}
            - name: LOGIN_GOOGLE_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.login.google.clientSecret_ref.secret_name }}
                  key: {{ .Values.secret.login.google.clientSecret_ref.secret_key }}
            {{- end }}
            {{- if .Values.secret.login.google.groupsServiceAccount_ref }}
            - name: LOGIN_GOOGLE_DIRECTORY_SERVICEACCOUNTFILEPATH
              value: /etc/console/secrets/login-google-groups-service-account.json
            {{- end }}
            {{- if .Values.secret.login.github.clientSecret_ref }}
            - name: LOGIN_GITHUB_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.login.github.clientSecret_ref.secret_name }}
                  key: {{ .Values.secret.login.github.clientSecret_ref.secret_key }}
            {{- end }}
            {{- if .Values.secret.login.github.personalAccessToken_ref }}
            - name: LOGIN_GITHUB_DIRECTORY_PERSONALACCESSTOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.login.github.personalAccessToken_ref.secret_name }}
                  key: {{ .Values.secret.login.github.personalAccessToken_ref.secret_key }}
            {{- end }}
            {{- if .Values.secret.login.okta.clientSecret_ref }}
            - name: LOGIN_OKTA_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.login.okta.clientSecret_ref.secret_name }}
                  key: {{ .Values.secret.login.okta.clientSecret_ref.secret_key }}
            {{- end }}
            {{- if .Values.secret.login.okta.directoryApiToken_ref }}
            - name: LOGIN_OKTA_DIRECTORY_APITOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.login.okta.directoryApiToken_ref.secret_name }}
                  key: {{ .Values.secret.login.okta.directoryApiToken_ref.secret_key }}
            {{- end }}
            {{- if .Values.secret.login.oidc.clientSecret_ref }}
            - name: LOGIN_OIDC_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.login.oidc.clientSecret_ref.secret_name }}
                  key: {{ .Values.secret.login.oidc.clientSecret_ref.secret_key }}
            {{- end }}
            {{- if .Values.secret.enterprise.license_ref }}
            - name: LICENSE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.enterprise.license_ref.secret_name }}
                  key: {{ .Values.secret.enterprise.license_ref.secret_key }}
            {{- end }}
            {{- if .Values.secret.redpanda.adminApi.password_ref }}
            - name: REDPANDA_ADMINAPI_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.redpanda.adminApi.password_ref.secret_name }}
                  key: {{ .Values.secret.redpanda.adminApi.password_ref.secret_key }}
            {{- end }}
            {{- if .Values.secret.redpanda.adminApi.tlsCa_ref }}
            - name: REDPANDA_ADMINAPI_TLS_CAFILEPATH
              value: "/etc/console/secrets/redpanda-admin-api-tls-ca"
            {{- end }}
            {{- if .Values.secret.redpanda.adminApi.tlsKey_ref }}
            - name: REDPANDA_ADMINAPI_TLS_KEYFILEPATH
              value: "/etc/console/secrets/redpanda-admin-api-tls-key"
            {{- end }}
            {{- if .Values.secret.redpanda.adminApi.tlsCert_ref }}
            - name: REDPANDA_ADMINAPI_TLS_CERTFILEPATH
              value: "/etc/console/secrets/redpanda-admin-api-tls-cert"
            {{- end }}
          {{- end }}
          envFrom:
            {{- with .Values.extraEnvFrom }}
            {{- tpl . $ | nindent 12 }}
            {{- end }}
        {{- with .Values.extraContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}           
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
