syntax = "proto3";

package redpanda.api.dataplane.v1alpha1;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

message TransformMetadata {
  string name = 1;
  string input_topic_name = 2;
  repeated string output_topic_names = 3;
  repeated PartitionTransformStatus status = 4;
}

message PartitionTransformStatus {
  int32 node_id = 1;
  int32 partition = 2;
  enum PartitionStatus {
    PARTITION_STATUS_UNSPECIFIED = 0;
    PARTITION_STATUS_RUNNING = 1;
    PARTITION_STATUS_INACTIVE = 2;
    PARTITION_STATUS_ERRORED = 3;
    PARTITION_STATUS_UNKNOWN = 4;
  }
  PartitionStatus status = 3;
  int32 lag = 4;
}

message ListTransformsRequest {
  message Filter {
    string name = 1 [
      (buf.validate.field).string.min_len = 1,
      (buf.validate.field).string.max_len = 128,
      (buf.validate.field).string.pattern = "^[\\P{Cc}\\P{Cf}]+$"
    ];
  }
  Filter filter = 1;
  string page_token = 2;
}

message ListTransformsResponse {
  string next_page_token = 1;
  repeated TransformMetadata transforms = 2;
}

message GetTransformRequest {
  string name = 1 [
    (buf.validate.field).string.min_len = 1,
    (buf.validate.field).string.max_len = 128,
    (buf.validate.field).string.pattern = "^[\\P{Cc}\\P{Cf}]+$"
  ];
}

message GetTransformResponse {
  TransformMetadata transform = 1;
}

message DeleteTransformRequest {
  string name = 1 [
    (buf.validate.field).string.min_len = 1,
    (buf.validate.field).string.max_len = 128,
    (buf.validate.field).string.pattern = "^[a-zA-Z0-9-_]+$"
  ];
}

message DeleteTransformResponse {}

service TransformService {
  rpc ListTransforms(ListTransformsRequest) returns (ListTransformsResponse) {
    option (google.api.http) = {get: "/v1alpha1/transforms"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List Transforms"
      description: "Retrieve a list of transforms with optional filtering"
      responses: {
        key: "200"
        value: {
          description: "OK"
          schema: {
            json_schema: {ref: ".redpanda.api.dataplane.v1alpha1.ListTransformsResponse"}
          }
        }
      }
    };
  }

  rpc GetTransform(GetTransformRequest) returns (GetTransformResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/transforms/{name}"
      response_body: "transform"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get Transform"
      description: "Get Transform!"
      responses: {
        key: "200"
        value: {
          description: "OK"
          schema: {
            json_schema: {ref: ".redpanda.api.dataplane.v1alpha1.GetTransformResponse"}
          }
        }
      }
      responses: {
        key: "404"
        value: {
          description: "Not Found"
          schema: {
            json_schema: {ref: ".google.rpc.Status"}
          }
        }
      }
    };
  }

  rpc DeleteTransform(DeleteTransformRequest) returns (DeleteTransformResponse) {
    option (google.api.http) = {delete: "/v1alpha1/transforms/{name}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Delete Transform"
      description: "Delete a WASM transform with the requested name."
      responses: {
        key: "204"
        value: {
          description: "Transform deleted successfully"
          schema: {}
        }
      }
      responses: {
        key: "404"
        value: {
          description: "Not Found"
          schema: {
            json_schema: {ref: ".google.rpc.Status"}
          }
        }
      }
    };
  }
}
